name: CI/CD with Terraform
on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  TF_STATE_BUCKET_NAME: ${{secrets.AWS_TF_STATE_BUCKET_NAME}}
  PRIVATE_SSH_KEY: ${{secrets.AWS_SSH_SECRET_KEY}}
  PUBLIC_SSH_KEY: ${{secrets.AWS_SSH_KEY_PUBLIC}}
  AWS_REGION: us-east-1

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      SERVER_PUBLIC_IP: ${{steps.set-ip.outputs.instance_public_ip}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=us-east-1"
        working-directory: ./terraform
      - name: Terraform Plan
        id: plan
        run: |-
          terraform plan \
          -var="region=us-east-1" \
          -var="public_key=$PUBLIC_SSH_KEY" \
          -var="private_key=$PRIVATE_SSH_KEY" \
          -var="key_name=deployerkey" \
          -out=PLAN
        working-directory: ./terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./terraform
      - name: Set Output
        id: set-ip
        run: |-
          echo "::set-output name=instance_public_ip::${terraform output instance_public_ip}"
  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env Variable
        run: echo SERVER_PUBLIC_IP=${{needs.deploy-infra.outputs.SERVER_PUBLIC_IP}} >> $GITHUB_ENV
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-action/amazon-ecr-login@v1
      - name: Build, push docker image
